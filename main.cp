#line 1 "C:/Users/wzomzot/Desktop/Мой курсач/02/main.c"
#line 1 "c:/users/wzomzot/desktop/Мой курсач/02/resources.h"




const unsigned char ALPHABET_NUMBERS[] =
{
 0x70, 0x88, 0x98, 0xA8, 0xC8, 0x88, 0x70,
 0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x70,
 0x70, 0x88, 0x08, 0x10, 0x20, 0x40, 0xF8,
 0xF8, 0x10, 0x20, 0x10, 0x08, 0x88, 0x70,
 0x10, 0x30, 0x50, 0x90, 0xF8, 0x10, 0x10,
 0xF8, 0x80, 0xF0, 0x08, 0x08, 0x88, 0x70,
 0x30, 0x40, 0x80, 0xF0, 0x88, 0x88, 0x70,
 0xF8, 0x08, 0x10, 0x20, 0x40, 0x40, 0x40,
 0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70,
 0x70, 0x88, 0x88, 0x78, 0x08, 0x10, 0x60
};


const unsigned char ALPHABET_LETTERS[] =
{
 0x70, 0x88, 0x88, 0x88, 0xF8, 0x88, 0x88,
 0xF0, 0x88, 0x88, 0xF0, 0x88, 0x88, 0xF0,
 0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70,
 0xE0, 0x90, 0x88, 0x88, 0x88, 0x90, 0xE0,
 0xF8, 0x80, 0x80, 0xF0, 0x80, 0x80, 0xF8,
 0xF8, 0x80, 0x80, 0xF0, 0x80, 0x80, 0x80,
 0x70, 0x88, 0x80, 0xB8, 0x88, 0x88, 0x78,
 0x88, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x88,
 0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70,
 0x38, 0x10, 0x10, 0x10, 0x10, 0x90, 0x60,
 0x88, 0x90, 0xA0, 0xC0, 0xA0, 0x90, 0x88,
 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF8,
 0x88, 0xD8, 0xA8, 0xA8, 0x88, 0x88, 0x88,
 0x88, 0x88, 0xC8, 0xA8, 0x98, 0x88, 0x88,
 0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70,
 0xF0, 0x88, 0x88, 0xF0, 0x80, 0x80, 0x80,
 0x70, 0x88, 0x88, 0x88, 0xA8, 0x90, 0x68,
 0xF0, 0x88, 0x88, 0xF0, 0xA0, 0x90, 0x88,
 0x78, 0x80, 0x80, 0x70, 0x08, 0x08, 0xF0,
 0xF8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70,
 0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20,
 0x88, 0x88, 0x88, 0xA8, 0xA8, 0xA8, 0x50,
 0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88,
 0x88, 0x88, 0x88, 0x50, 0x20, 0x20, 0x20,
 0xF8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xF8
};
#line 1 "c:/users/wzomzot/desktop/Мой курсач/02/ws2812.h"
#line 1 "c:/users/wzomzot/desktop/Мой курсач/02/ds1302.h"




typedef struct
{
 unsigned char day;
 unsigned char month;
 unsigned char year;
} Date;


typedef struct
{
 unsigned char hour;
 unsigned char minute;
 unsigned char second;
} Time;


void DS1302_init();


void DS1302_get_date(Date* current_date);


void DS1302_set_date(Date* current_date);


void DS1302_get_time(Time* current_time);


void DS1302_set_time(Time* current_time);


unsigned char DS1302_serial_read();


void DS1302_serial_write(unsigned char value);


unsigned char DS1302_read(unsigned char address);


void DS1302_write(unsigned char address, unsigned char value);


unsigned char bcd_to_decimal(unsigned char value);


unsigned char decimal_to_bcd(unsigned char value);
#line 1 "c:/users/wzomzot/desktop/Мой курсач/02/enc28j60.h"




typedef struct
{
 unsigned int eur_buy[2];
 unsigned int eur_sale[2];
 unsigned int usd_buy[2];
 unsigned int usd_sale[2];
 unsigned long timestamp;
} Request;


void ENC28J60_init();


char ENC28J60_had_request();


void ENC28J60_get_request(Request* received_request);


typedef struct
{
 unsigned canCloseTCP: 1;
 unsigned isBroadcast: 1;
} TEthPktFlags;


unsigned int SPI_Ethernet_UserTCP(unsigned char* remote_host,
 unsigned int remote_port,
 unsigned int local_port,
 unsigned int request_length,
 TEthPktFlags* flags);


unsigned int SPI_Ethernet_UserUDP(unsigned char* remote_host,
 unsigned int remote_port,
 unsigned int local_port,
 unsigned int request_length,
 TEthPktFlags* flags);
#line 8 "c:/users/wzomzot/desktop/Мой курсач/02/ws2812.h"
typedef struct
{
 unsigned char blue;
 unsigned char green;
 unsigned char red;
} PixelParameter;


void WS2812_init();


void WS2812_prepare_data();


void WS2812_delay_long();


void WS2812_delay_short();


void WS2812_read_state();


void WS2812_save_state();


void WS2812_print_clock();


void WS2812_print_currency_name();


void WS2812_print_currency_value_buy();


void WS2812_print_currency_value_sale();


void WS2812_decrease_time();


void WS2812_increase_time();
#line 5 "C:/Users/wzomzot/Desktop/Мой курсач/02/main.c"
void PIC18F26K20_init();

void main()
{

 PIC18F26K20_init();

 ENC28J60_init();

 DS1302_init();

 WS2812_init();

 while (1)
 {

 if (ENC28J60_had_request())
 {
 WS2812_prepare_data();
 }
 }
}

void PIC18F26K20_init()
{

 TRISB = 0x00;
 TRISE = 0x00;
 TRISF = 0x00;
 TRISH = 0x00;
 TRISJ = 0x00;

 PORTB = 0x00;
 PORTE = 0x00;
 PORTF = 0x00;
 PORTH = 0x00;
 PORTJ = 0x00;


 SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV16,
 _SPI_DATA_SAMPLE_MIDDLE,
 _SPI_CLK_IDLE_LOW,
 _SPI_HIGH_2_LOW);
}
